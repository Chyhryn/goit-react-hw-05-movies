{"version":3,"file":"static/js/779.7ba3092b.chunk.js","mappings":"qPAEaA,EAAaC,EAAAA,GAAAA,GAAH,iFAOVC,EAAaD,EAAAA,GAAAA,EAAH,qQAWVE,EAASF,EAAAA,GAAAA,EAAH,qEAKNG,EAAuBH,EAAAA,GAAAA,IAAH,6C,SCiBjC,EAhCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,IAECG,EAIL,OACE,8BACGA,EAAQK,OAAS,GAChB,SAACb,EAAD,UACGQ,EAAQM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACf,EAAD,YACE,UAACC,EAAD,sBAAiBa,MACjB,uBAAIC,MAFWF,EADN,OAQf,SAACX,EAAD,yDAMP,C,+LCvCDc,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,sGAGrBF,EAAAA,EAAAA,IAAA,oCAAuCC,IAHlB,uBAErBE,EAFqB,EAE7BC,KAAQD,QAFqB,kBAKxBA,GALwB,2CAAH,qDAQjBE,EAAY,mCAAG,WAAMR,GAAN,yFACHG,EAAAA,EAAAA,IAAA,iBACXH,EADW,oBACGI,EADH,oBADG,uBAClBG,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQZE,EAAe,mCAAG,WAAMC,GAAN,yFAGnBP,EAAAA,EAAAA,IAAA,gCACiBC,EADjB,kBACkCM,EADlC,+CAHmB,uBAEnBJ,EAFmB,EAE3BC,KAAQD,QAFmB,kBAMtBA,GANsB,2CAAH,sDASfK,EAAY,mCAAG,WAAMX,GAAN,yFAGhBG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,EAA1C,oBAHgB,uBAEhBQ,EAFgB,EAExBL,KAAQK,KAFgB,kBAKnBA,GALmB,2CAAH,sDAQZhB,EAAe,mCAAG,WAAMI,GAAN,yFAGnBG,EAAAA,EAAAA,IAAA,iBACEH,EADF,4BACwBI,EADxB,2BAHmB,uBAEnBE,EAFmB,EAE3BC,KAAQD,QAFmB,kBAOtBA,GAPsB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin: 0;\n  padding: 10px 0;\n\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.p`\npadding 5px;\n  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5);\n  -webkit-box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5);\n  -moz-box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5);\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n  font-weight: 700;\n`;\n\nexport const NoReviwsNotification = styled.div`\n  margin-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport {\n  ReviewList,\n  ReviewItem,\n  Author,\n  NoReviwsNotification,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <Author>Author: {author}</Author>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <NoReviwsNotification>\n          We don't have any reviews for this movie!\n        </NoReviwsNotification>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a0ca7f55ad45082e1adc2f62ff95899a';\n\nexport const getTrandingMovies = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n\n  return results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return results;\n};\n\nexport const getMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n  return cast;\n};\n\nexport const getMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return results;\n};\n"],"names":["ReviewList","styled","ReviewItem","Author","NoReviwsNotification","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","then","length","map","id","author","content","axios","API_KEY","getTrandingMovies","results","data","getMovieById","getMovieByQuery","query","getMovieCast","cast"],"sourceRoot":""}